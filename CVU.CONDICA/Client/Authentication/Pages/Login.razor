@page "/auth/login"

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using Blazored.LocalStorage
@using CVU.CONDICA.Client.Constants;
@using CVU.CONDICA.Client.Services;
@using CVU.CONDICA.Dto.UserManagement

@inject BlazorHttpClient httpClient;
@inject ILocalStorageService localStorage;
@inject NavigationManager navigationManager

<MudThemeProvider Theme="@loginTheme" />

<MudForm @ref="form" @bind-IsValid="@success">

    <MudTextField T="string"
                  Style="background-color: transparent; color: white"
                  @bind-Value="postModel.Email"
                  Label="Email"
                  Required="true"
                  Variant="Variant.Text"
                  RequiredError="Emailul este obligatoriu!"
                  Validation="@(new EmailAddressAttribute() {ErrorMessage = "Adresa de e-mail este nevalidă"})" />

    <MudTextField T="string"
                  Style="background-color: transparent; color: white"
                  @bind-Value="postModel.Password"
                  Label="Parola"
                  Variant="Variant.Text"
                  InputType="InputType.Password"
                  RequiredError="Parola este obligatorie!" />

    <MudButton OnClick="@(() => { navigationManager.NavigateTo("/auth/reset-password"); })" Disabled="@(!success)" Class="ml-auto">Ați uitat parola?</MudButton>
    <div class="d-flex align-center justify-space-between">
        <MudButton Variant="Variant.Filled" OnClick="SendLoginRequest" Disabled="@(!success)" Class="ml-auto">Login</MudButton>
    </div>

</MudForm>


@code{

    LoginDto postModel = new LoginDto();
    bool success;
    MudForm form;
    public class Token
    {
        public string Jwt { get; set; }
    }

    private async Task SendLoginRequest()
    {
        var response = await httpClient.Post<LoginDto, Token>($"{ApplicationEndpoints.Users}/log-in", postModel);
        if (response != null)
        {
            await localStorage.SetItemAsync("token", response.Jwt);
            navigationManager.NavigateTo("/");
        }
    }
}